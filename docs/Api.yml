openapi : '3.0.3'
info:
  title: Wallet_Management API
  version: 1.0.0
  description: This is an API speculation about the application wallet budget STD22019/STD22059
servers:
  - url: https://walletManagement.com
paths:
  /account:
    get:
      tags:
        - "Account"
      summary: Get all account
      description: A list of account 
      responses:
        200:
          description: The list of filtered accounts 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post: 
      tags:
        - "Account"
      summary: Create a new account 
      requestBody: 
          required: true
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Account"
      responses:
        200:
          description: Account created successfully
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        400:
          description: Bad request
  /account/{accountId}:
    parameters:
      - name: accountId 
        in: path 
        required: true
        description: ID of account
        schema: 
          type: integer 
    get:
      tags:
        - "Account"
      summary: Details of account by Id
      responses:
        200: 
          description: Account details 
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Account"
        400:
          description: Account not found
    put: 
      tags:
        - "Account"
      summary: Update account details 
      requestBody: 
        required: true 
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/Account"
      responses:
        200:
          description: Account updated successfully
        400:
          description: Bad request
        404:
          description: Account not found
    delete: 
      tags:
        - "Account"
      summary: Delete a account by Id 
      responses:
        204:
          description: Account deleted successfully
        404:
          description: Account not found
  /transaction:
    get:
      tags:
        - "Transaction"
      summary: Retrieve all transactions 
      responses:
        200:
          description: A list of all transactions 
          content:
            application/json:
              schema: 
                type: array 
                items: 
                  $ref: "#/components/schemas/Transaction"
    post:
      tags:
        - "Transaction"
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Bad request
  /transactions/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        required: true
        description: ID of the transaction
        schema:
          type: integer
    get:
      tags:
        - "Transaction"
      summary: Retrieve transaction details by id
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '404':
          description: Transaction not found
  /currency:
    get:
      tags:
        - Currency
      summary: Get all currency
      operationId: getAllCurrency
      description: get all currency with pagination
      responses:
        200:
          description: Currency details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        400:
          description: Currency not found
    put:
      tags:
        - Currency
      summary: Save or Update currency
      operationId: saveOrUpdateCurrency
      description: Save list of new currency or update if already exist 
      security:
        - oauth2: [ admin ]
      requestBody:
        required: true
        description: List of the currency to save or update
        content:
          application/json: 
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      responses:
        200:
          description: Currency details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        400:
          description: Currency not found
    post:
      tags:
        - "Currency"
      summary: Create a new currency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Currency"
      responses:
        '201':
          description: Currency created successfully
        '400':
          description: Bad request
  /currency/{currencyId}:
    get:
      tags:
        - Currency
      summary: Get one currency
      operationId: getOneCurrency
      description: Get one currency by a given id
      parameters:
        - in: path
          name: currencyId
          schema:
            type: string 
            format: uuid
          description: Id of the currency to get
          required: true
      responses:
        200:
          description: Currency details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        400:
          description: Currency not found
components:
  schemas:
    Account: 
      type: object
      allOf:
        - $ref: "#/components/schemas/UserAccount"
    UserAccount:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        balance:
          type: number
          format: float
        currency:
          type: string
    Transaction: 
      type: object
      properties:
        id: 
          type: integer
        description:
          type: string
        amount: 
          type: integer
        currency: 
          type: string
        accountId:
          type: integer
        account: 
          $ref: "#/components/schemas/Account"
    Currency:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '550e8400-e29b-41d4-a716-446655440000'
        name:
          type: string
          example: 'Ariary'
        code:
          type: string
          example: 'MGA'
        symbol:
          type: string
          example: 'Ar'
        exchange_rate:
          type: number
          format: float
          example: 0.0002
        updated_at:
          type: string
          format: date
          description: current_date if not specified
          example: '2023-01-01'